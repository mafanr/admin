export default {
  navbar: {
    logOut: 'Log Out',
    dashboard: 'Dashboard',
    github: 'Github',
    screenfull: 'screenfull',
    theme: 'theme'
  },
  route: {
    dashboard: 'Dashboard',
    ops: 'Ops',
    services: 'Services',
    strategy: 'Strategy',
    api: 'API',
    auditLogs: 'Audit Logs',
    configImport: 'Config Import',
    metrics: 'Metrics',
    users: 'Users',
    setting: 'Setting',
    service: 'Service',
    application: 'Application',
    cloudserver: 'Cloud Server'
  },
  common: {
    name: 'Name',
    owner: 'Owner',
    desc: 'Desc',
    operate: 'Operate',
    service: 'Service',
    edit: 'Edit',
    selectUser: 'select user',
    selectPriv: 'select priv',
    descTips: 'describe target with simple words',
    cancel: 'Cancel',
    submit: 'Submit',
    setPriv: 'set priv',
    dangerZone: 'Danger zone',
    selectService: 'Select service',
    fuzzingSearch: 'fuzzing search',
    application: 'application',
    status: 'status',
    release: 'release',
    notReleased: 'not released',
    manage: 'manage',
    copyConfig: 'copy config',
    offline: 'Offline',
    delete: 'Delete',
    version: 'Version',
    select: 'Please select',
    param: 'Param',
    rule: 'Rule',
    output: 'Output',
    type: 'Type',
    createDate: 'Create date',
    updateDate: 'Update date',
    start: 'Start',
    close: 'Close',
    add: 'Add',
    currentList: 'Current list',
    second: 'second',
    batchSetting: 'Batch setting',
    content: 'Content',
    operationType: 'Operation type',
    operator: 'Operator',
    privilege: 'Privilege',
    onlyNumAndAlpha: 'only support alphabet and numeric',
    old: 'Old',
    new: 'New',
    reInput: 'Re-input',
    username: 'user name',
    stop: 'Stop'
  },
  ops: {
    addService: 'Create service',
    serviceNameTips: 'only support alhpabet,once created,it cant be changed',
    changeOwner: 'change owner',
    changeOwnerTips: 'Once the owner is changed to others, you will loose the control of this service',
    editService: 'Edit service',

    addApp: 'Add app',
    editApp: 'Edit application',
    addUser: 'Add user',
    userName: 'user name',
    myPW: 'My password',
    userPW: 'User password'
  },
  juz: {
    createApi: 'Create api',
    batchReleas: 'Batch release',
    batchStrategy: 'Batch strategy',
    backendInfo: 'backend info',
    apiDefine: 'API Define',
    apiTest: 'API Test',
    auditLog: 'Audit Log',
    metrics: 'Metrics',
    basic: 'Basic',
    reqeust: 'Request',
    advance: 'Advance',
    apiName: 'API name',
    backendType: 'Backend type',
    addrType: 'Addr type',
    backendAddr: 'Backend addr',
    backendURI: 'Backend URI',
    params: 'Params',
    paramVerify: 'Param verify',
    verifyTable: 'Verify table',
    canaryTest: 'Canary test',
    targetAPIID: 'Target APIID',
    trafficRatio: 'Traffic ratio',
    ipList: 'IP list',
    bwList: 'White/Black list',
    noStrategy: 'Strategy not set',
    timoutRetry: 'Timout/Retry',
    trafficControl: 'Traffic control',
    urlType1Tips: 'Client request with http://JUZ_IP/a/b/c',
    urlType2Tips: 'Client request with  http://JUZ_IP/service/api?api_name=abc&api_version=1',
    apiIDTips1: "API ID is auto generated with this rule: Service + API Name + 'v' + Version, e.g. test.get.v1",
    apiIDTips2: "API ID is auto generated with this rule: API Name + 'v' + VersionAPI ID,e.g. /a/b/c.v1",
    apiNameTips1: "The api name must be the form of a.b, sperated with '.', only allow alphabet and numberic",
    apiNameTips2: 'The api name must be the form of /a/b,only allow alphabet and numberic',
    routeType: 'Route type',
    routeDirect: 'Direct',
    routeRedirect: 'Redirect',
    passThrough: 'Pass through',
    targetIDTips: 'Some traffic will route to this api id',
    trafficRatioTips: 'e.g. 10 means 10% traffic will route to the api id above',
    ipListTips: 'Controls which ip will be routed,if not control,routed will be randomly',
    sepIpWithSpace: 'Separate ips with spaces',
    createStrategyTips: 'Tips: you need to create strategy in strategy page first',
    strategy: 'Strategy',
    createRule: 'Create rule',
    testData: 'Test data',
    testCreate: 'Test and Create',
    mode: 'Debug mode',
    testResult: 'Test result',
    addStrategy: 'Add strategy',
    timeout: 'Timeout(second)',
    retryTimes: 'Retry Times',
    retryIntv: 'Retry Interval',
    retryTimesTips: 'When error happens, we will retry after some time',
    retryIntvTips: 'the retry interval, in seconds',
    qpsTips: 'Max QPS per second, 0 means no limit',
    concurrentsTips: 'Max concurrents per second, 0 means no limit',
    userQuotaTips: 'e.g. param=mobile|time span=86400|times=1000, means each mobile number only be allowed to access 1000 times in 86400 seconds',
    concurrents: 'Concurrents',
    userQuota: 'User quota',
    timeSpan: 'Time span',
    times: 'Tims',
    emptyNoLimit: 'empty means no limit',
    createStrategy: 'Create strategy',
    editStrategy: 'Edit strategy',
    copyConfigTips: 'Tips: copy the config first ,then paste below to import'
  }
}
